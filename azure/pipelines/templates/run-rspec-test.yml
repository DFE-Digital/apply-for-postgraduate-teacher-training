parameters:
  - name: testCommand
    type: string
  - name: testResultsFile
    type: string
  - name: featureFlagState
    type: string

steps:
  - script: |
      echo $DEFAULT_FEATURE_FLAG_STATE
      make ${{ parameters.testCommand }}
      test_result=$?
      if [ "$test_result" == "0" ]
      then
        if [ -f $testResultFile ]
        then
          seedvalue=$(grep -Pio 'name="seed" value="\d+"' $testResultFile)
          echo "##[command]$seedvalue"
          if [ $(grep "^<testsuite name=\"rspec\"" $testResultFile | cut -d' ' -f3 | cut -d'"' -f2) -eq 0 ]
          then
            ## tests="0" in the rspec results file; Rspec has errored and tests haven't run
            echo "##vso[task.logissue type=error]Rspec exited abnormally"
            exit 1
          fi
          if [ $(grep "^<testsuite name=\"rspec\"" $testResultFile | cut -d' ' -f5 | cut -d'"' -f2) -gt 0 ]
          then
            echo "##vso[task.logissue type=error]One or more rspec tests failed"
            exit 1
          fi
          if [ $(grep "^<testsuite name=\"rspec\"" $testResultFile | cut -d' ' -f4 | cut -d'"' -f2) -gt 0 ]
          then
            echo "##vso[task.logissue type=warning]One or more rspec tests were skipped"
          fi
        else
          echo "##vso[task.logissue type=error]rspec-results file not found."
          exit 1
        fi
        exit 0
      else
        echo "##vso[task.logissue type=error]Rspec test task exited abnormally."
        exit 1
      fi
    displayName: 'Execute ${{ parameters.testCommand }}'
    timeoutInMinutes: 10
    env:
      testResultFile: ${{ parameters.testResultsFile }}
      dockerHubUsername: $(dockerHubUsername)
      dockerHubImageName: $(imageName)
      dockerHubImageTag: $(Build.BuildNumber)
      RAILS_ENV: test
      GOVUK_NOTIFY_API_KEY: $(govukNotifyAPIKey)
      AUTHORISED_HOSTS: $(authorisedHosts)
      GOVUK_NOTIFY_CALLBACK_API_KEY: $(govukNotifyCallbackAPIKey)
      SANDBOX: $(sandbox)
      DEFAULT_FEATURE_FLAG_STATE: ${{ parameters.featureFlagState }}
