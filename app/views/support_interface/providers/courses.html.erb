<%= render 'provider_navigation', title: 'Courses' %>

<%= render(SupportInterface::ProviderSyncCoursesToggleComponent.new(provider: @provider)) %>

<% if @provider.courses.any? %>
  <%= form_with model: @provider, url: support_interface_provider_path(@provider), method: :post do |f| %>
    <h3 class="govuk-heading-m">
      Open all courses
    </h3>

    <p class="govuk-body">This will toggle every course on this provider to be available through Apply.</p>

    <% unless @provider.all_associated_accredited_providers_onboarded? %>
      <%= render WarningTextComponent.new(
        text: 'Some of this providerâ€™s courses are ratified by an accredited body which does not yet participate in the beta. The accredited body might expect to manage applications to those courses. Check before clicking this button.')
      %>
    <% end %>
    <%= f.govuk_submit "Open #{pluralize(@provider.courses.size, 'course')}" %>
  <% end %>
<% end %>

<% %w[2021 2020 2019].each do |year| %>
  <h2 class='govuk-heading-l'><%= year %>: <%= pluralize(@provider.courses.in_cycle(year).size, 'course') %> (<%= @provider.courses.in_cycle(year).open_on_apply.size %> on DfE Apply)</h2>
  <%= render(SupportInterface::ProviderCoursesTableComponent.new(provider: @provider, courses: @provider.courses.includes(:accredited_provider).in_cycle(year))) %>

  <% if @provider.accredited_courses.in_cycle(year).any? %>
    <h2 class='govuk-heading-l'><%= year %>: ratifies <%= pluralize(@provider.accredited_courses.in_cycle(year).size, 'course') %> (<%= @provider.accredited_courses.in_cycle(year).open_on_apply.size %> on DfE Apply)</h2>
    <%= render(SupportInterface::ProviderCoursesTableComponent.new(provider: @provider, courses: @provider.accredited_courses.in_cycle(year))) %>
  <% end %>
<% end %>
