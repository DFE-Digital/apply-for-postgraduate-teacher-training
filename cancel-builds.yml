trigger:
    batch: false
    branches:
      include:
        - '*'
pr:
  branches:
    include:
      - master

variables:
  System.Debug: true

pool:
  vmImage: 'ubuntu-latest'

steps:
  - checkout: none
  - powershell: |
      if($env:DEBUG){
        $DebugPreference = "Continue"
       }
      $azureDevOpsAuthorizationHeader = @{ Authorization = "Bearer $env:SYSTEM_ACCESSTOKEN" }
      $gitHubApiHeader = @{ Accept = "application/vnd.github.v3+json" }
      $azurePipelinesBuildApi = "$($env:COLLECTION_URL)$env:PROJECT_ID/_apis/build/builds/$($env:BUILD_ID)?api-version=5.1"
      $gitHubGetCurrentCommitApi = "https://api.github.com/repos/DFE-Digital/apply-for-postgraduate-teacher-training/git/commits/$($env:COMMIT_ID)"
      $gitHubGetNewCommitsToMasterApi = "https://api.github.com/repos/DFE-Digital/apply-for-postgraduate-teacher-training/commits?sha=master"
      
      Write-Debug "azurePipelinesBuildApi is $azurePipelinesBuildApi"
      Write-Debug "gitHubGetCurrentCommitApi is $gitHubGetCurrentCommitApi"
      Write-Debug "SOURCE_BRANCH IS $env:SOURCE_BRANCH"
      Write-Debug "BUILD_NUMBER IS $env:BUILD_NUMBER"
      Write-Debug "AccessToken is $env:SYSTEM_ACCESSTOKEN"
      Write-Debug "ORGANISATION_ID is $env:ORGANISATION_ID"
      Write-Debug "COLLECTION_URL is $env:COLLECTION_URL"
      Write-Debug "COMMIT_ID is $($env:COMMIT_ID)"
      Write-Debug "BUILD_ID is $env:BUILD_ID"
      Write-Debug "PROJECT_ID is $env:PROJECT_ID"
      Write-Debug "PROJECT_NAME is $env:PROJECT_NAME"

      $currentCommit = Invoke-RestMethod -Uri $gitHubGetCurrentCommitApi -Headers $gitHubApiHeader -Method Get -ErrorAction SilentlyContinue -ErrorVariable $gitHubApiError
      $currentCommitSha = $currentCommit.sha
      $currentCommitTimestamp = $currentCommit.committer.date | Get-Date -UFormat '+%Y-%m-%dT%H:%M:%S.000Z'
      Write-Debug "currentCommitTimestamp is $($currentCommitTimestamp)"
      $gitHubGetNewCommitsToMasterApi = $gitHubGetNewCommitsToMasterApi + "&since=$($currentCommitTimestamp)"
      Write-Debug "gitHubGetNewCommitsToMasterApi is $gitHubGetNewCommitsToMasterApi"

      $commitsSinceCurrentCommit = Invoke-RestMethod -Uri $gitHubGetNewCommitsToMasterApi -Headers $gitHubApiHeader -Method Get
      
      if($commitsSinceCurrentCommit -and $currentCommitSha -ne $commitsSinceCurrentCommit.sha[0]){
        Write-Host "There are new commits to master since this commit, Cancelling this build..."

        $currentBuild = Invoke-RestMethod -Uri $azurePipelinesBuildApi -Headers $azureDevOpsAuthorizationHeader -Method Get -ErrorAction Stop -ErrorVariable $errorVariable
        Write-Debug $currentBuild | ConvertTo-Json
        $currentBuild.status = "cancelling"
        $requestBody = @{
          buildNumber = $currentBuild.buildNumber
          id = $currentBuild.id
          status = "cancelling"
        } | ConvertTo-Json
        Write-Host "requestBody => is $requestBody"
        $cancelPipeline = Invoke-RestMethod -Uri $azurePipelinesBuildApi -Headers $azureDevOpsAuthorizationHeader -Method Patch -Body $requestBody -ContentType "application/json" -ErrorAction SilentlyContinue -ErrorVariable errorVariable
        if($errorVariable){
          Write-Error $errorVariable
          exit 1
        }
      }
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
      ORGANISATION_ID: $(System.CollectionId)
      COLLECTION_URL: $(System.TeamFoundationCollectionUri)
      COMMIT_ID: $(Build.SourceVersion)
      SOURCE_BRANCH: $(Build.SourceBranchName)
      BUILD_ID: $(Build.BuildId)
      BUILD_NUMBER: $(Build.BuildNumber)
      PROJECT_ID: $(System.TeamProjectId)
      PROJECT_NAME: $(System.TeamProject)
      DEBUG: $(System.Debug)
    displayName: Check for new commits to master
    condition: eq(variables['Build.Reason'], 'IndividualCI')
    continueOnError: false
  
  - powershell: |
      Start-Sleep -Seconds 20
      Write-Host "Running..."