trigger:
  batch: true
  branches:
    include:
      - "*"

pr: none

variables:
- group: Docker Shared variables
- group: APPLY - Shared Variables
- name: imageName
  value: 'apply-for-postgraduate-teacher-training'
- name: debug
  value: true

stages:
- stage: build_test_release
  displayName: 'Build, Test & Release'
  variables:
  - group: APPLY - ENV - QA
  jobs:
  - job: build_and_test_docker_image
    displayName: 'Build & Test Docker Image'
    pool:
      vmImage: 'Ubuntu-16.04'

    variables:
    - name: system.debug
      value: $(debug)

    steps:
    - script: |
        GIT_SHORT_SHA=$(echo $(Build.SourceVersion) | cut -c 1-7)
        docker_path=$(dockerHubUsername)/$(imageName)
        echo '##vso[task.setvariable variable=compose_file]docker-compose.yml:docker-compose.azure.yml'
        echo "##vso[build.updatebuildnumber]$GIT_SHORT_SHA"
        echo "##vso[task.setvariable variable=docker_path;]$docker_path"
      displayName: 'Set version number'

    - script: make setup
      displayName: 'Build & setup'
      env:
        dockerHubUsername: $(dockerHubUsername)
        dockerHubImageName: $(imageName)
        railsSecretKeyBase: $(railsSecretKeyBase)
        RAILS_ENV: test
        GOVUK_NOTIFY_API_KEY: $(govukNotifyAPIKey)
        AUTHORISED_HOSTS: $(authorisedHosts)
        FIND_BASE_URL: $(findBaseUrl)

    - script: make ci.lint-ruby
      displayName: 'Rubocop'
      env:
        dockerHubUsername: $(dockerHubUsername)
        dockerHubImageName: $(imageName)
        RAILS_ENV: test
        GOVUK_NOTIFY_API_KEY: $(govukNotifyAPIKey)
        AUTHORISED_HOSTS: $(authorisedHosts)
        FIND_BASE_URL: $(findBaseUrl)

    - script: make ci.lint-erb
      displayName: 'ERB lint'
      env:
        dockerHubUsername: $(dockerHubUsername)
        dockerHubImageName: $(imageName)
        RAILS_ENV: test
        GOVUK_NOTIFY_API_KEY: $(govukNotifyAPIKey)
        AUTHORISED_HOSTS: $(authorisedHosts)
        FIND_BASE_URL: $(findBaseUrl)

    - script: |
        make ci.cucumber
        test_result=$?
        if [ "$test_result" == "0" ]
        then
          true;
        else
          echo "ERROR: Cucumber spec tests failed."
          false
        fi
      displayName: 'Cucumber specs'
      env:
        dockerHubUsername: $(dockerHubUsername)
        dockerHubImageName: $(imageName)
        RAILS_ENV: test
        GOVUK_NOTIFY_API_KEY: $(govukNotifyAPIKey)
        AUTHORISED_HOSTS: $(authorisedHosts)
        FIND_BASE_URL: $(findBaseUrl)

    - script: |
        make ci.test
        test_result=$?
        if [ "$test_result" == "0" ]
        then
          true;
        else
          echo "ci.test failed"
          false
        fi
      displayName: 'Execute tests'
      env:
        dockerHubUsername: $(dockerHubUsername)
        dockerHubImageName: $(imageName)
        RAILS_ENV: test
        GOVUK_NOTIFY_API_KEY: $(govukNotifyAPIKey)
        AUTHORISED_HOSTS: $(authorisedHosts)
        FIND_BASE_URL: $(findBaseUrl)

    - task: Docker@1
      displayName: Tag image with current build number $(Build.BuildNumber)
      inputs:
        command: Tag image
        imageName: "$(docker_path):latest"
        arguments: "$(docker_path):$(Build.BuildNumber)"

    - task: Docker@1
      displayName: Docker Hub login
      inputs:
        command: "login"
        containerregistrytype: Container Registry
        dockerRegistryEndpoint: DfE Docker Hub

    - task: Docker@1
      displayName: Push tagged image
      inputs:
        command: Push an image
        imageName: "$(docker_path):$(Build.BuildNumber)"

    - task: Docker@1
      displayName: Push tagged image (latest) if master
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      inputs:
        command: Push an image
        imageName: "$(docker_path):latest"

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifacts'
      inputs:
        path: '$(System.DefaultWorkingDirectory)/azure/'
        artifactName: 'arm_template'


- stage: deploy_qa
  displayName: 'Deploy - QA'
  dependsOn: build_test_release
  condition: and(succeeded('build_test_release'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  variables:
  - group: APPLY - ENV - QA
  jobs:
  - template: azure-pipelines-deploy-template.yml
    parameters:
      debug: $(debug)
      subscriptionPrefix: 's106'
      subscriptionName: 'Apply (106) - Dev'
      environment: 'qa'
      resourceEnvironmentName: 'd01'
      serviceName: 'apply'
      containerImageReference: '$(imageName):$(build.buildNumber)'
      keyVaultName: 's106d01-shared-kv-01'
      keyVaultResourceGroup: 's106d01-shared-rg'
      customHostName: '$(govukHostname)'
      databaseName: 'apply'
      databaseUsername: 'applyadm512'
      databasePassword: '$(databasePassword)'
      databaseStorageAutoGrow: 'disabled'
      databaseBackupRetentionDays: 7
      dockerhubUsername: '$(dockerHubUsername)'
      railsSecretKeyBase: '$(railsSecretKeyBase)'
      railsEnv: 'production'
      basicAuthUsername: '$(basicAuthUsername)'
      basicAuthPassword: '$(basicAuthPassword)'
      supportUsername: '$(supportUsername)'
      supportPassword: '$(supportPassword)'
      authorisedHosts: '$(authorisedHosts)'
      sentryDSN: '$(sentryDSN)'
      logstashEnable: '$(logstashEnable)'
      logstashRemote: '$(logstashRemote)'
      logstashHost: '$(logstashHost)'
      logstashPort: '$(logstashPort)'
      logstashSsl: '$(logstashSsl)'
      govukNotifyAPIKey: '$(govukNotifyAPIKey)'
      findBaseUrl: '$(findBaseUrl)'
      disableBasicAuthForLandingPage: '$(disableBasicAuthForLandingPage)'
      dfeSignInClientId: '$(dfeSignInClientId)'
      dfeSignInSecret: '$(dfeSignInSecret)'
      dfeSignInIssuer: '$(dfeSignInIssuer)'
      stateChangeSlackUrl: '$(stateChangeSlackUrl)'
      customAvailabilityMonitors: '$(customAvailabilityMonitors)'
      alertRecipientEmails: '$(alertRecipientEmails)'


- stage: deploy_devops
  displayName: 'Deploy - DevOps'
  dependsOn: build_test_release
  condition: and(succeeded('build_test_release'), eq(variables['Build.SourceBranchName'], variables.devDeployBranchNameOverride))
  variables:
  - group: APPLY - ENV - DevOps
  jobs:
  - template: azure-pipelines-deploy-template.yml
    parameters:
      debug: $(debug)
      subscriptionPrefix: 's106'
      subscriptionName: 'Apply (106) - Dev'
      environment: 'devops'
      resourceEnvironmentName: 'd02'
      serviceName: 'apply'
      containerImageReference: '$(imageName):$(build.buildNumber)'
      keyVaultName: 's106d01-shared-kv-01'
      keyVaultResourceGroup: 's106d01-shared-rg'
      databaseName: 'apply'
      databaseUsername: 'applyadm512'
      databasePassword: '$(databasePassword)'
      databaseStorageAutoGrow: 'disabled'
      databaseBackupRetentionDays: 7
      dockerhubUsername: '$(dockerHubUsername)'
      railsSecretKeyBase: '$(railsSecretKeyBase)'
      railsEnv: 'production'
      basicAuthUsername: '$(basicAuthUsername)'
      basicAuthPassword: '$(basicAuthPassword)'
      supportUsername: '$(supportUsername)'
      supportPassword: '$(supportPassword)'
      authorisedHosts: '$(authorisedHosts)'
      sentryDSN: '$(sentryDSN)'
      logstashEnable: '$(logstashEnable)'
      logstashRemote: '$(logstashRemote)'
      logstashHost: '$(logstashHost)'
      logstashPort: '$(logstashPort)'
      logstashSsl: '$(logstashSsl)'
      govukNotifyAPIKey: '$(govukNotifyAPIKey)'
      findBaseUrl: '$(findBaseUrl)'
      disableBasicAuthForLandingPage: '$(disableBasicAuthForLandingPage)'
      dfeSignInClientId: '$(dfeSignInClientId)'
      dfeSignInSecret: '$(dfeSignInSecret)'
      dfeSignInIssuer: '$(dfeSignInIssuer)'
      stateChangeSlackUrl: '$(stateChangeSlackUrl)'
      customAvailabilityMonitors: '$(customAvailabilityMonitors)'
      alertRecipientEmails: '$(alertRecipientEmails)'
